{"version":3,"sources":["types/Filters.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/SearchInput/SearchInput.tsx","components/Select/Select.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoItem","todo","selectedTodo","onTodoSelect","selected","id","className","classNames","completed","title","type","onClick","TodoList","todos","map","SearchInput","filters","onFiltersChange","placeholder","value","query","onChange","e","target","style","pointerEvents","options","All","label","Active","Completed","Select","status","TodoFilter","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","loading","setLoading","error","setError","user","setUser","useEffect","userId","catch","finally","href","email","name","App","setTodos","setSelectedTodo","setFilters","visibleTodos","filteredTodos","filter","normalizedQuery","toLowerCase","trim","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad6cc587.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport type Filters = {\n  status: Status;\n  query: string;\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  selectedTodo: Todo | null,\n  onTodoSelect: (todo: Todo) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  onTodoSelect,\n}) => {\n  const selected = selectedTodo?.id === todo.id;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={\n        classNames({\n          'has-background-info-light': selected,\n        })\n      }\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n\n      {todo.completed ? (\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n      ) : (\n        <td className=\"is-vcentered\" />\n      )}\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onTodoSelect(todo)}\n\n        >\n          <span className=\"icon\">\n            <i className={\n              classNames('fas', {\n                'fa-eye-slash': selected,\n                'fa-eye': !selected,\n              })\n            }\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onTodoSelect: (todo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todos, selectedTodo, onTodoSelect },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            selectedTodo={selectedTodo}\n            onTodoSelect={onTodoSelect}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filters } from '../../types';\n\ntype Props = {\n  filters: Filters;\n  onFiltersChange: (filters: Filters) => void;\n};\n\nexport const SearchInput:React.FC<Props> = ({\n  filters,\n  onFiltersChange,\n}) => {\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onFiltersChange({\n      ...filters,\n      query: e.target.value,\n    });\n  };\n\n  const handleClearSearch = () => {\n    onFiltersChange({\n      ...filters,\n      query: '',\n    });\n  };\n\n  return (\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={filters.query}\n        onChange={handleSearch}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {filters.query && (\n        <span\n          className=\"icon is-right\"\n          style={{ pointerEvents: 'all' }}\n        >\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            aria-label=\"clear search\"\n            className=\"delete\"\n            onClick={handleClearSearch}\n          />\n        </span>\n      )}\n    </p>\n  );\n};\n","import React from 'react';\nimport { Filters, Status } from '../../types';\n\nconst options = [\n  { value: Status.All, label: 'All' },\n  { value: Status.Active, label: 'Active' },\n  { value: Status.Completed, label: 'Completed' },\n\n];\n\ntype Props = {\n\n  filters: Filters;\n  onFiltersChange: (filters: Filters) => void;\n};\n\nexport const Select: React.FC<Props> = ({\n  filters,\n  onFiltersChange,\n}) => {\n  const onSelectionChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    onFiltersChange({\n      ...filters,\n      status: e.target.value as Status,\n    });\n  };\n\n  return (\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filters.status}\n          onChange={onSelectionChange}\n        >\n          {options.map(({ value, label }) => (\n            <option key={value} value={value}>\n              {label}\n            </option>\n          ))}\n        </select>\n      </span>\n    </p>\n  );\n};\n","import React from 'react';\nimport { Filters } from '../../types';\nimport { SearchInput } from '../SearchInput';\nimport { Select } from '../Select';\n\ntype Props = {\n  filters: Filters;\n  onFiltersChange: (filters: Filters) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filters,\n  onFiltersChange,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n\n      <Select\n        filters={filters}\n        onFiltersChange={onFiltersChange}\n      />\n\n      <SearchInput\n        filters={filters}\n        onFiltersChange={onFiltersChange}\n      />\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo, User } from '../../types';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n\n    getUser(todo.userId)\n      .then(setUser)\n      .catch(setError)\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {\n                todo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              {error ? (\n                <span className=\"has-text-danger\">\n                  Error loading user\n                </span>\n              ) : (\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo, Filters, Status } from './types';\n\nconst getFilteredTodos = (todos: Todo[], filters: Filters) => {\n  let filteredTodos = [...todos];\n  const { status, query } = filters;\n\n  if (query) {\n    filteredTodos = filteredTodos.filter((todo) => {\n      const normalizedQuery = query.toLowerCase().trim();\n      const normalizedTitle = todo.title.toLowerCase();\n\n      return normalizedTitle.includes(normalizedQuery);\n    });\n  }\n\n  if (status === Status.Active) {\n    filteredTodos = filteredTodos.filter((todo) => todo.completed === false);\n  }\n\n  if (status === Status.Completed) {\n    filteredTodos = filteredTodos.filter((todo) => todo.completed === true);\n  }\n\n  return filteredTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filters, setFilters] = useState<Filters>({\n    status: Status.All,\n    query: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n\n    getTodos()\n      .then(setTodos)\n      .catch(setError)\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const visibleTodos = getFilteredTodos(todos, filters);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filters={filters}\n                onFiltersChange={setFilters}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              {error && (\n                <p className=\"notification is-danger\">\n                  Something went wrong...\n                </p>\n              )}\n\n              {!loading && !error && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  onTodoSelect={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}